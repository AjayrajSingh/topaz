// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module maxwell;

import "apps/maxwell/services/suggestion/ask_handler.fidl";
import "apps/maxwell/services/suggestion/proposal.fidl";

// A service enabling Agents to contribute Proposals proactively to the
// Suggestion engine.
[ServiceName="maxwell.ProposalPublisher"]
interface ProposalPublisher {
  // Includes the given |proposal| in the list from this Agent. Proposals are
  // identified by |proposal.id|, and are namespaced by the Agent's ID.
  // If a Proposal with the same id is already present, it is overwritten.
  Propose(Proposal proposal);

  // Removes the Proposal with the given ID from the Suggestion engine.
  Remove(string proposal_id);

  // Returns a list of all Proposals created by the identified Agent.
  GetAll() => (array<Proposal> proposals);

  // TODO(rosswang): It is also conceivable that AskHandler? might be an
  // argument to RegisterPublisher. That may more closely mimic the eventual
  // Component model and is a shallower nesting. However, having it here offers
  // greater flexibility, simplifies #include structure, and simplifies logic
  // both in the launcher and agent. Otherwise, the launcher would have to
  // obtain the AskHandler outgoing service and somehow make it available to the
  // agent environment host, which is messy since the environment services are
  // typically asked for before outgoing services are even available.
  RegisterAskHandler(AskHandler ask_handler);
};
