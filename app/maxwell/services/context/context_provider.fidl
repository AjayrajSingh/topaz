// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module maxwell;

// Exposes access to Context values, each of which are explicitly named by a
// 'topic'. Each topic has a known/pre-defined value representation.
//
// This interface is meant to be used in the scope of a single Fuchsia
// component.
[ServiceName="maxwell.ContextProvider"]
interface ContextProvider {
  // When any of the conditions in |query| change, a ContextUpdate is sent to
  // |listener|.
  //
  // If current context values match the query, a result is sent immediately.
  //
  // The query will continue to stay active as long as the |listener| handle is
  // not closed.
  Subscribe(ContextQuery query, ContextListener listener);
};

interface ContextListener {
  // Receives an update for a context label.
  OnUpdate(ContextUpdate result);
};

struct ContextUpdate {
  // A map of the latest values of each topic specified in the ContextQuery's
  // |topics| field that was issued during |Subscribe()|.
  //
  // Topics that don't have a current value are not present in |values|.
  map<string, string> values;
};

union ContextFilter {
  // A JSON value. When evaluating against booleans, numbers and strings,
  // performs an exact match.  For objects, each property in |partial_eq|'s
  // JSON must have a corresponding value in the topic being evaluated against
  // and recursively satisfy partial_eq on that property.
  //
  // Providing an array is invalid and will always evaluate to false.
  // TODO(thatguy): At some point, consider how to treat arrays here.
  string partial_eq;

  // When evaluating against an array, evaluates |filter_array| against each
  // element and filter the array to contain only those elements.  Evaluates to
  // true if the resulting array is not empty.
  ContextFilter filter_array;
};

struct ContextQuery {
  // A set of topics to include in the ContextUpdate when the following
  // conditions match. An empty list indicates a wildcard query and includes
  // all topics.
  //
  // If no conditions/filters are given below, the query will match whenever
  // any of |topics| changes.
  array<string> topics;

  // A map from topics to filters applied to each topic. A subscription will
  // only be notified of an update if each specified filter evaluates to true.
  //
  // ContextFilters may transform the values they filter for clients subscribed
  // to this ContextQuery.
  //
  // It is an error to add a filter for a topic that is not listed in |topics|.
  // Filters on a wildcard query have no effect.
  map<string, ContextFilter>? filters;
};
