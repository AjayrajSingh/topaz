// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module maxwell;

// Exposes access to Context values, each of which are explicitly named by a
// 'topic'. Each topic has a known/pre-defined value representation.
//
// This interface is meant to be used in the scope of a single Fuchsia
// component.
[ServiceName="maxwell.ContextProvider"]
interface ContextProvider {
  // When any of the conditions in |query| change, a ContextUpdate is sent to
  // |listener|.
  //
  // If current context values match the query, a result is sent immediately.
  //
  // The query will continue to stay active as long as the |listener| handle is
  // not closed.
  Subscribe(ContextQuery query, ContextListener listener);
};

interface ContextListener {
  // Receives an update for a context label.
  OnUpdate(ContextUpdate result);
};

struct ContextUpdate {
  // A map of the latest values of each topic specified in the ContextQuery's
  // |topics| field that was issued during |Subscribe()|.
  //
  // Topics that don't have a current value are not present in |values|.
  map<string, string> values;
};

struct ContextQuery {
  // A set of topics to include in the ContextUpdate when the following
  // conditions match. An empty list includes all topics.
  //
  // If no conditions are given below, the query will match whenever any
  // of |topics| changes.
  //
  // TODO(thatguy): Eventually add more useful query/trigger conditions here.
  // For now, this is all we will need for a while going forward.
  array<string> topics;
};
