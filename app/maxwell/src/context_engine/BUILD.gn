# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("context_publisher_impl") {
  sources = [
    "context_publisher_impl.cc",
    "context_publisher_impl.h",
  ]

  deps = [
    ":context_repository",
    ":scope_utils",
    "//apps/maxwell/services/context",
    "//apps/maxwell/services/user:scope",
  ]
}

source_set("context_provider_impl") {
  sources = [
    "context_provider_impl.cc",
    "context_provider_impl.h",
  ]

  deps = [
    ":context_repository",
    ":debug",
    "//apps/maxwell/services/context",
    "//apps/maxwell/services/user:scope",
  ]
}

source_set("context_repository") {
  sources = [
    "context_repository.cc",
    "context_repository.h",
  ]

  deps = [
    ":scope_utils",
    "//apps/maxwell/lib/context:formatting",
    "//apps/maxwell/services/context",
    "//apps/maxwell/src:bound_set",
  ]
}

executable("context_repository_unittest") {
  testonly = true

  sources = [
    "context_repository_unittest.cc",
  ]

  deps = [
    ":context_repository",
    "//apps/maxwell/lib/context:formatting",
    "//apps/maxwell/services/context",
    "//lib/mtl",
    "//third_party/gtest",
  ]
}

source_set("context_engine_impl") {
  sources = [
    "context_engine_impl.cc",
    "context_engine_impl.h",
  ]

  deps = [
    ":context_provider_impl",
    ":context_publisher_impl",
    ":context_repository",
    ":debug",
    "//application/lib/app",
    "//apps/maxwell/services/context",
    "//apps/maxwell/src/context_engine/coprocessors:aggregate",
    "//apps/maxwell/src/context_engine/coprocessors:focused_story",
    "//lib/fidl/cpp/bindings",
  ]
}

source_set("debug") {
  sources = [
    "debug.cc",
    "debug.h",
  ]

  deps = [
    "//apps/maxwell/services/context:debug",
    "//lib/fidl/cpp/bindings",
  ]
}

source_set("scope_utils") {
  sources = [
    "scope_utils.h",
    "scope_utils.cc",
  ]

  deps = [
    "//apps/maxwell/services/user:scope",
    "//lib/ftl",
    "//third_party/boringssl",  # for sha256
  ]
}

executable("context_engine") {
  sources = [
    "context_engine_main.cc",
  ]

  deps = [
    ":context_engine_impl",
    "//application/lib/app",
    "//lib/mtl",
  ]
}
