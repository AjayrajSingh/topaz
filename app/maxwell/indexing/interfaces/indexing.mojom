// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[DartPackage="intelligence"]
module intelligence;

import "apps/ledger/api/ledger.mojom";

[ServiceName="intelligence.QueryExecutorFactory"]
interface QueryExecutorFactory {
  Initialize(ledger.Ledger ledger);
  GetQueryExecutor(array<uint8, 16> page_id) => (QueryExecutor query_executor);
};

// Each QueryExecutor is associated with a single ledger Page over which the
// query is executed.
interface QueryExecutor {
  // |results| is the list of IRIs (Internationalized Resource Identifier) of
  // objects on the page that match the query.
  ExecuteQuery(Query query) => (array<string> results);
};

struct Query {
  Filter filter;

  // Maximum number of results to return. Negative value means no maximum.
  int64 max_results = -1;

  // TODO(azani): Add sorting and paging.
};

union Filter {
  array<Filter> and;
  array<Filter> or;
  Filter not;

  string has_label;

  ValueTest eq;
  ValueTest lt;
  ValueTest lte;
  ValueTest gt;
  ValueTest gte;
};

struct ValueTest {
  string label;
  Value value;
};

union Value {
  string string_value;
  int64 int_value;
  float64 float_value;
};
