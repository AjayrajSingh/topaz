// Copyright 2018 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fidl.examples.bindings_test;

struct NoHandleStruct {
    string foo;
    int32 bar;
    vector<uint8> baz;
};

[Discoverable]
interface TestServer {
  1: OneWayNoArgs();
  2: ReceivedOneWayNoArgs() -> (bool received);

  3: OneWayStringArg(string value);
  4: ReceivedOneWayString() -> (string value);

  5: OneWayThreeArgs(int32 x, uint64 y, NoHandleStruct z);
  6: ReceivedOneWayThreeArgs() -> (int32 x, uint64 y, NoHandleStruct z);

  7: TwoWayNoArgs() -> ();
  8: TwoWayStringArg(string value) -> (string value);
  9: TwoWayThreeArgs(int32 x, uint64 y, NoHandleStruct z) -> (int32 x, uint64 y, NoHandleStruct z);

  10: SendEmptyEvent();
  11: -> EmptyEvent();

  12: SendStringEvent(string value);
  13: -> StringEvent(string value);

  14: SendThreeArgEvent(int32 x, uint64 y, NoHandleStruct z);
  15: -> ThreeArgEvent(int32 x, uint64 y, NoHandleStruct z);

  16: SendMultipleEvents(int32 count, float64 intervalSeconds);
  17: -> MultipleEvent(int32 index);

  18: ReplySlowly(string value, float64 delaySeconds) -> (string value);

  19: CloseConnection(float64 delaySeconds);
};
