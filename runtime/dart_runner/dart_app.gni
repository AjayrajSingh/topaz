# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/dart/dart_package.gni")

# Defines a Dart application that can be run in the Dart content handler
#
# Parameters
#
#   package_name (optional)
#     Name of the dart package.
#
#   main_dart (required)
#     File containing the main function of the application.
#
#   deps (optional)
#     Dependencies of this application
#
#   output_name (optional)
#     Name of the output file to generate. Defaults to ${target_name}.dartx
template("dart_app") {
  assert(defined(invoker.main_dart), "Must specify main_dart file")

  dart_package_target_name = target_name + "_dart_package"

  dart_package(dart_package_target_name) {
    forward_variables_from(invoker, [ "deps", "source_dir" ])
    if (defined(invoker.package_name)) {
      package_name = invoker.package_name
    } else {
      infer_package_name = true
    }
  }

  if (defined(invoker.output_name)) {
    bundle_name = invoker.output_name
  } else {
    bundle_name = "${target_name}.dartx"
  }

  bundle_path = "$root_out_dir/$bundle_name"
  snapshot_path = "$target_gen_dir/${target_name}_snapshot.bin"
  depfile_path = "${snapshot_path}.d"

  dart_snapshotter_label =
      "//apps/dart_content_handler/snapshotter($host_toolchain)"
  dart_snapshotter_dir = get_label_info(dart_snapshotter_label, "root_out_dir")
  dart_snapshotter = "$dart_snapshotter_dir/dart_snapshotter"

  action(target_name) {
    if (defined(invoker.testonly)) {
      testonly = invoker.testonly
    }

    depfile = depfile_path

    outputs = [
      bundle_path,
      snapshot_path,
    ]

    script = dart_snapshotter

    rebased_packages_path =
        rebase_path("$target_gen_dir/$dart_package_target_name.packages")
    rebased_bundle_path = rebase_path(bundle_path)
    rebased_snapshot_path = rebase_path(snapshot_path)
    rebased_depfile_path = rebase_path(depfile_path)
    rebased_build_output_path = rebase_path(bundle_path, root_build_dir)

    args = [
      "--packages=$rebased_packages_path",
      "--dartx=$rebased_bundle_path",
      "--snapshot=$rebased_snapshot_path",
      "--depfile=$rebased_depfile_path",
      "--build-output=$rebased_build_output_path",
      rebase_path(invoker.main_dart),
    ]

    deps = [
      ":$dart_package_target_name",
      dart_snapshotter_label,
    ]
  }
}
