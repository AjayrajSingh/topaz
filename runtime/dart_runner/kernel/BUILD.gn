# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/dart/dart_tool.gni")
import("//third_party/dart/utils/compile_platform.gni")

compile_platform("kernel_platform_files") {
  sources = [
    "libraries.json",
  ]

  outputs = [
    "$root_out_dir/runner_patched_sdk/platform_strong.dill",
    "$root_out_dir/runner_patched_sdk/vm_outline_strong.dill",
  ]

  args = [
    "--target=dart_runner",
    "--strong",
    "dart:core",
  ]
}

action("kernel_core_snapshot") {
  if (is_debug) {
    gen_snapshot_exe = "gen_snapshot"
  } else {
    gen_snapshot_exe = "gen_snapshot_product"
  }

  gen_snapshot_label =
      "//third_party/dart/runtime/bin:$gen_snapshot_exe($host_toolchain)"
  gen_snapshot_dir = get_label_info(gen_snapshot_label, "root_out_dir")
  gen_snapshot = "$gen_snapshot_dir/$gen_snapshot_exe"

  deps = [
    ":kernel_platform_files",
    gen_snapshot_label,
  ]

  platform_dill = "$root_out_dir/runner_patched_sdk/platform_strong.dill"
  inputs = [
    platform_dill,
  ]

  vm_snapshot_data = "$target_gen_dir/vm_isolate_snapshot.bin"
  vm_snapshot_instructions = "$target_gen_dir/vm_snapshot_instructions.bin"
  isolate_snapshot_data = "$target_gen_dir/isolate_snapshot.bin"
  isolate_snapshot_instructions =
      "$target_gen_dir/isolate_snapshot_instructions.bin"
  outputs = [
    vm_snapshot_data,
    vm_snapshot_instructions,
    isolate_snapshot_data,
    isolate_snapshot_instructions,
  ]

  script = gen_snapshot
  args = [
    "--snapshot_kind=core",
    "--strong",
    "--reify_generic_functions",
    "--limit_ints_to_64_bits",
    "--await_is_keyword",
    "--enable_mirrors=false",
    "--vm_snapshot_data=" + rebase_path(vm_snapshot_data, root_build_dir),
    "--vm_snapshot_instructions=" +
        rebase_path(vm_snapshot_instructions, root_build_dir),
    "--isolate_snapshot_data=" +
        rebase_path(isolate_snapshot_data, root_build_dir),
    "--isolate_snapshot_instructions=" +
        rebase_path(isolate_snapshot_instructions, root_build_dir),
    rebase_path(platform_dill),
  ]
}

dart_tool("kernel_compiler") {
  main_dart = "compiler.dart"
  source_dir = "."
  disable_analysis = true

  deps = [
    "//third_party/dart-pkg/pub/args",
    "//third_party/dart/pkg/front_end",
    "//third_party/dart/pkg/kernel",
    "//third_party/dart/pkg/vm",
  ]
}
